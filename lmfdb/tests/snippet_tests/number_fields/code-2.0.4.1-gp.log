\\ snippet evaluation file generated by generate_snippet_tests.py
gp> K = bnfinit(y^2 + 1, 1)
[[;], matrix(0,3), [;], Mat([0.E-57 + 2.2142974355881810060341309203570740801*I, 0.E-57 + 1.5707963267948966192313216916397514421*I, 0.E-57 + 7.2104805251811987093537992294814345725*I]), [[5, [-2, 1]~, 1, 1, [2, -1; 1, 2]], [2, [1, 1]~, 2, 1, [1, -1; 1, 1]], [5, [2, 1]~, 1, 1, [-2, -1; 1, -2]]], 0, [y^2 + 1, [0, 1], -4, 1, [Mat([1, 0.E-57 + 1.0000000000000000000000000000000000000*I]), [1, 1.0000000000000000000000000000000000000; 1, -1.0000000000000000000000000000000000000], [16, 16; 16, -16], [2, 0; 0, -2], [2, 0; 0, 2], [1, 0; 0, -1], [1, [0, -1; 1, 0]], [2]], [0.E-57 + 1.0000000000000000000000000000000000000*I], [1, y], [1, 0; 0, 1], [1, 0, 0, -1; 0, 1, 1, 0]], [[1, [], []], 1, [[2, 5, [1, 1]~, [-2, 1]~, [-2, -1]~, [-1, 3]~, [-1, -3]~]~, [;], [0, 0, 0; 0, 0, 0; -1, 1, -1; 0, 0, 0; 0, 0, 0; 1, 0, 0; 0, 0, 1], 5], [4, y], []], [[;], [;], [;], []~, [;], [;]], [[], 0, 0]]
gp> K.pol
y^2 + 1
gp> poldegree(K.pol)
2
gp> K.sign
[0, 1]
gp> K.disc
-4
gp> factor(abs(K.disc))[,1]~
[2]
gp> K.zk
[1, y]
gp> K.clgp
[1, [], []]
gp> K.fu
[]
gp> K.tu[2]
Mod(y, y^2 + 1)
gp> K.fu
[]
gp> K.reg
1
gp> K = bnfinit(x^2 + 1, 1);
gp> [polcoeff (lfunrootres (lfuncreate (K))[1][1][2], -1), 2^K.r1 * (2*Pi)^K.r2 * K.reg * K.no / (K.tu[1] * sqrt (abs (K.disc)))]
[0.78539816339744830961566084581987572105, 0.78539816339744830961566084581987572105]
gp> L = nfsubfields(K); L[2..length(b)]
[[x^2 + 1, x]]
gp> polgalois(K.pol)
[2, -1, 1, "S2"]
gp> p = 7; pfac = idealprimedec(K, p); vector(length(pfac), j, [pfac[j][3], pfac[j][4]])
[[1, 2]]
gp> 
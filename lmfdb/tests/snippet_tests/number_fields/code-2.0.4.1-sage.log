# snippet evaluation file generated by generate_snippet_tests.py
sage: x = polygen(QQ);  K.<a> = NumberField(x^2 + 1)
sage: K.defining_polynomial()
x^2 + 1
sage: K.degree()
2
sage: K.signature()
(0, 1)
sage: K.disc()
-4
sage: K.disc().support()
[2]
sage: K.automorphisms()
[
Ring endomorphism of Number Field in a with defining polynomial x^2 + 1
  Defn: a |--> a,
Ring endomorphism of Number Field in a with defining polynomial x^2 + 1
  Defn: a |--> -a
]
sage: K.integral_basis()
[1, a]
sage: K.class_group().invariants()
()
sage: UK = K.unit_group()
sage: UK.rank()
0
sage: UK.torsion_generator()
u
sage: UK.fundamental_units()
[]
sage: K.regulator()
1.00000000000000
sage: x = polygen(QQ);  K.<a> = NumberField(x^2 + 1)
sage: DK = K.disc(); r1,r2 = K.signature(); RK = K.regulator();  RR = RK.parent()
sage: hK = K.class_number(); wK = K.unit_group().torsion_generator().order();
sage: 2^r1 * (2*RR(pi))^r2 * RK * hK / (wK * RR(sqrt(abs(DK))))  
0.785398163397448
sage: K.subfields()[1:-1]
[

]
sage: K.galois_group(type='pari')
<ipython-input-79-70c79b25ed84>:1: DeprecationWarning: the different Galois types have been merged into one class
See https://github.com/sagemath/sage/issues/28782 for details.
  K.galois_group(type='pari')
Galois group 2T1 (S2) with order 2 of x^2 + 1
sage: p = 7; [(e, pr.norm().valuation(p)) for pr,e in K.factor(p)]
[(1, 2)]
sage: 
# snippet evaluation file generated by generate_snippet_tests.py
sage: E = EllipticCurve([0, 0, 1, -1, 0])
sage: E.short_weierstrass_model()
Elliptic Curve defined by y^2 = x^3 - 16*x + 16 over Rational Field
sage: E.gens()
[(0 : -1 : 1)]
sage: E.torsion_subgroup().gens()
()
sage: E.integral_points()
[(-1 : -1 : 1), (0 : -1 : 1), (1 : -1 : 1), (2 : -3 : 1), (6 : -15 : 1)]
sage: E.conductor().factor()
37
sage: E.discriminant().factor()
37
sage: E.j_invariant().factor()
2^12 * 3^3 * 37^-1
sage: E.has_cm()
False
sage: E.rank()
1
sage: E.analytic_rank()
1
sage: E.regulator()
0.0511114082399688
sage: E.period_lattice().omega()
5.98691729246392
sage: E.tamagawa_numbers()
[1]
sage: E.torsion_order()
1
sage: E.sha().an_numerical()
1.00000000000000
sage: r = E.rank();
sage: E.lseries().dokchitser().derivative(1,r)/r.factorial()
0.305999773834052
sage: E = EllipticCurve([0, 0, 1, -1, 0]); r = E.rank(); ar = E.analytic_rank(); assert r == ar;
sage: Lr1 = E.lseries().dokchitser().derivative(1,r)/r.factorial(); sha = E.sha().an_numerical();
sage: omega = E.period_lattice().omega(); reg = E.regulator(); tam = E.tamagawa_product(); tor = E.torsion_order();
sage: assert r == ar; print("analytic sha: " + str(RR(Lr1) * tor^2 / (omega * reg * tam)))
analytic sha: 0.999999999999999
sage: E.q_eigenform(20)
q - 2*q^2 - 3*q^3 + 2*q^4 - 2*q^5 + 6*q^6 - q^7 + 6*q^9 + 4*q^10 - 5*q^11 - 6*q^12 - 2*q^13 + 2*q^14 + 6*q^15 - 4*q^16 - 12*q^18 + O(q^20)
sage: E.modular_degree()
2
sage: E.local_data()
[Local data at Principal ideal (37) of Integer Ring:
 Reduction type: bad non-split multiplicative
 Local minimal model: Elliptic Curve defined by y^2 + y = x^3 - x over Rational Field
 Minimal discriminant valuation: 1
 Conductor exponent: 1
 Kodaira Symbol: I1
 Tamagawa Number: 1]
sage: rho = E.galois_representation(); [rho.image_type(p) for p in rho.non_surjective()]
[]
sage: 